<mach-ii version="1.0">

	<!-- PROPERTIES -->
	<properties>
		<!-- The defaultEvent will be the page that gets called when nothing is called -->
		<property name="defaultEvent" value="Admin.Login" />
		
		<!-- the application root must be the name of the folder in wich the -->
		<!-- site exists. -->
		<property name="applicationRoot" value="/u4u" />
		<property name="eventParameter" value="event" />
		<property name="parameterPrecedence" value="form" />
		<property name="maxEvents" value="10" />
		<property name="exceptionEvent" value="exception" />
	</properties>

	<!-- LISTENERS -->
	<listeners>
	
		<listener name="AccountManager" type="u4u.FunctionPages.Accounts">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>	
		<listener name="AdminManager" type="u4u.FunctionPages.Admin">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="AdministratorManager" type="u4u.FunctionPages.Administrators">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="AdvertisementManager" type="u4u.FunctionPages.Advertisements">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="CommunityManager" type="u4u.FunctionPages.Communities">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="CommunityCategoryManager" type="u4u.FunctionPages.CommunityCategories">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>	
		<listener name="CommunityPostManager" type="u4u.FunctionPages.CommunityPosts">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>			
		<listener name="CourseManager" type="u4u.FunctionPages.Courses">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="DealManager" type="u4u.FunctionPages.Deals">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="DealCategoryManager" type="u4u.FunctionPages.DealCategories">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="EmailManager" type="u4u.FunctionPages.Emails">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>	
		<listener name="EventManager" type="u4u.FunctionPages.Events">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="EventCategoryManager" type="u4u.FunctionPages.EventCategories">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>			
		<listener name="GeographyManager" type="u4u.FunctionPages.Geography">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="JobManager" type="u4u.FunctionPages.Jobs">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="JobCategoryManager" type="u4u.FunctionPages.JobCategories">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="LocationManager" type="u4u.FunctionPages.Locations">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="MarketplaceManager" type="u4u.FunctionPages.Marketplace">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="MarketplaceCategoryManager" type="u4u.FunctionPages.MarketplaceCategories">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="PageManager" type="u4u.FunctionPages.Pages">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="SchoolManager" type="u4u.FunctionPages.Schools">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="StudyGroupManager" type="u4u.FunctionPages.StudyGroups">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>		
		<listener name="StudyGroupPostManager" type="u4u.FunctionPages.StudyGroupPosts">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>
		<listener name="UserManager" type="u4u.FunctionPages.Users">
			<invoker type="MachII.framework.invokers.EventArgsInvoker" />	
		</listener>
		
	</listeners>
	
	<!-- INCLUDES -->
	<includes>
	
		<include file="/u4u/config/IncludeConfigs/AccountConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/AdministratorConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/AdvertisementConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/CommunityConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/CommunityCategoryConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/CommunityPostConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/CourseConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/DealConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/DealCategoryConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/EmailConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/EventConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/EventCategoryConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/JobConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/JobCategoryConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/MarketplaceConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/MarketplaceCategoryConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/PageConfig.xml" />		
		<include file="/u4u/config/IncludeConfigs/SchoolConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/StudyGroupConfig.xml" />
		<include file="/u4u/config/IncludeConfigs/StudyGroupPostConfig.xml" />
				
	</includes>

	<!-- EVENT HANDLERS -->
	<event-handlers>		
			
		<!-- ///////////////////////////////////////////////////////////// -->
		<!-- ///////////////   MAIN ADMINISTRATOR EVENTS   /////////////// -->
		<!-- ///////////////////////////////////////////////////////////// -->
		
		<!-- Set the default event-handler -->
		<event-handler event="Admin.Login">					
			<view-page name="AdminLogin" contentKey="request.content" />
			<view-page name="mainDisplayPage" />
		</event-handler>
		
		<!-- Event for handling the administrators Login -->
		<event-handler event="Admin.Verify" access="public">
			<event-arg name="InputValue" variable="Password" />
			<notify listener="AdminManager" method="GetHashedValue" resultKey="request.HashedPassword"  />
			<event-arg name="Password" variable="request.HashedPassword" />
			<notify listener="AdminManager" method="VerifyLogin" />
		</event-handler>
		
		<!-- Event for handling the administrators Logout -->
		<event-handler event="Admin.Logout" access="public">
			<notify listener="AdminManager" method="Logout" />
		</event-handler>
		
		<!-- Event for displaying the admin hope page -->
		<event-handler event="Admin.HomePage">			
			<view-page name="AdminHome" contentKey="request.content" />
			<view-page name="mainDisplayPage" />			
		</event-handler>
									
		<!-- ///////////////////////////////////////////////////////////// -->
		<!-- //////////////////    EXCEPTION EVENTS    /////////////////// -->
		<!-- ///////////////////////////////////////////////////////////// -->							
		<event-handler event="exception">
			<view-page name="exception" contentKey="request.content" />
			<view-page name="mainDisplayPage" />
		</event-handler>
		
	</event-handlers>
	
	<subroutines>		
		<subroutine name="GetPaginationStart">
			<notify listener="AdminManager" method="GetGridRows" resultKey="request.GridRows" />
			<event-arg name="StartRow" variable="request.GridRows.StartRow" />
			<event-arg name="EndRow" variable="request.GridRows.EndRow" />
		</subroutine>
		
		<subroutine name="GetPaginationEnd">
			<notify listener="AdminManager" method="GetGridTotals" resultKey="request.GridTotals" />
			<event-arg name="RowsStruct" variable="request.GridRows" />			
			<event-arg name="TotalsStruct" variable="request.GridTotals" />
			<notify listener="AdminManager" method="GetListingPagination" resultKey="request.GridPagination" />
			<notify listener="AdminManager" method="GetGridPagination" resultKey="request.GridPagination" />
		</subroutine>
		
		<subroutine name="GetSortBox">
			<event-arg name="SortOptionsArray" variable="request.SortOptions" />
			<notify listener="AdminManager" method="GetSortOptionsBox" resultKey="request.SortBox" />
		</subroutine>
		
		<subroutine name="GetSortColumn">
			<event-arg name="SortOptionsArray" variable="request.SortOptions" />			
			<notify listener="AdminManager" method="GetSortColumn" resultKey="request.SortColumn" />
			<event-arg name="sidx" variable="request.SortColumn" />
		</subroutine>
	</subroutines>
	
	<!-- PAGE-VIEWS -->
	<page-views>
		<!-- Exception Page -->
		<page-view name="exception" page="/DisplayPages/admin/exception.cfm" />
		
		<!-- Main Display Page -->
		<page-view name="mainDisplayPage" page="/DisplayPages/Admin/MainDisplayPage.cfm" />	

		<!-- Excel Display Page -->
		<page-view name="excelDisplayPage" page="/DisplayPages/Admin/ExcelDisplayPage.cfm" />			
		
		<!-- Option Display Page -->
		<page-view name="optionDisplayPage" page="/DisplayPages/Admin/OptionDisplayPage.cfm" />	
		
		<!-- Main Administrator Display Pages -->
		<page-view name="AdminLogin" page="/DisplayPages/Admin/Login.cfm" />			
		<page-view name="AdminHome" page="/DisplayPages/Admin/AdminHome.cfm" />	
	</page-views>

</mach-ii>